apiVersion: v1
kind: ConfigMap
metadata:
  name: beacon-engine-config
  namespace: beacon
data:
  application-prod.properties: |-
    server.port=8080
    
    beacon.url=https://beacon-d.inmetro.gov.br
    
    server.use-forward-headers=true
    spring.http.encoding.charset=UTF-8
    
    #Database
    spring.datasource.url=jdbc:mysql://localhost/beacon2?useSSL=false&useTimezone=false&serverTimezone=UTC
    spring.datasource.username=root
    spring.datasource.password=
    
    spring.jpa.hibernate.ddl-auto=validate
    
    #hibernate
    spring.jpa.show-sql=false
    spring.jpa.properties.hibernate.format_sql=true
    spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
    spring.jpa.properties.hibernate.jdbc.time_zone=UTC
    
    #logging
    logging.file=logs/beacon-engine.log
    logging.level.root=warn
    spring.main.banner-mode=off
    
    # SPRING MVC (WebMvcProperties)
    spring.mvc.throw-exception-if-no-handler-found=true
    
    #spring.devtools.livereload.port=35730
    
    spring.jpa.open-in-view=false
    management.endpoints.web.exposure.include = *
    
    #jackson
    spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSSz
    spring.jackson.serialization.write-dates-as-timestamps=false
    spring.jackson.deserialization.UNWRAP_ROOT_VALUE=true
    
    #beacon
    beacon.number-of-entropy-sources=1
    
    # Send alerts when a source doesn't work
    beacon.send.alerts.by.email=false
    
    #XOR or CONCAT
    beacon.combination=CONCAT
    
    #Delay persist beacon in millis
    # 7 seconds = 1000*7=70000
    #beacon.pulse.release.delay=7000
    
    #Habilita o envio do precommitment para o função de combinação baseada em VDF
    beacon.vdf.combination.send.precom-to-queue=true
    
    #beacon.vdf.combination.send.minutes=1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59
    #beacon.vdf.combination.send.minutes=0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,48,44,46,48,50,52,54,56,58
    #beacon.vdf.combination.send.minutes=0,10,20,30,40,50
    beacon.vdf.combination.send.minutes=2,12,22,32,42,52
    
    #Unicorn
    beacon.unicorn.end-submission=false
    #use comma-separated numbers(no cron style)
    #beacon.unicorn.submission.finalize=15,45
    beacon.unicorn.submission.finalize=1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59
    #beacon.unicorn.submission.finalize=3,7,13,17,23,27,33,37,43,47,53,57
    
    #key
    #beacon.x509.certificate=/home/leandro/dev/beacon-keys/4096-module/beacon.cer
    #beacon.x509.privatekey=/home/leandro/dev/beacon-keys/4096-module/beacon-priv.pem
    
    #beacon.x509.certificate=/var/beacon/engine/keys/4096-module/beacon.cer
    #beacon.x509.privatekey=/var/beacon/engine/keys/4096-module/beacon-priv.pem
    beacon.x509.certificate=/var/beacon/conf/certificate/beacon.cer
    beacon.x509.privatekey=/var/beacon/conf/key/beacon-priv.pem
    #beacon.x509.certificate=${BEACON_X509_CERTIFICATE}
    #beacon.x509.privatekey=${BEACON_X509_PRIVATEKEY}
    
    #queue
    spring.rabbitmq.host=localhost
    spring.rabbitmq.port=5672
    spring.rabbitmq.username=user_consumer
    spring.rabbitmq.password=
    
    spring.rabbitmq.listener.simple.retry.enabled=false
   
    
    #mail exchange
    spring.mail.host=webmail.inmetro.gov.br
    spring.mail.port=25
    spring.mail.username=
    spring.mail.password=
    spring.mail.properties.mail.smtp.auth=false
    spring.mail.properties.mail.smtp.starttls.enable=true
    
    beacon.mail.from=beacon@inmetro.gov.br
    beacon.mail.to=lpcorrea@inmetro.gov.br,leandro.fpk@gmail.com
    
    beacon.mail.resend.alert-in-pulses=10
    
    beacon.aspects.enabled=false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beacon-engine-deployment
  namespace: beacon
  labels:
    app: beacon-engine-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beacon-engine-deployment
  template:
    metadata:
      #annotations:
      #  sidecar.istio.io/inject: "true"
      labels:
        app: beacon-engine-deployment
    spec:
      containers:
        - name: beacon-engine-deployment
          image: registro-docker.inmetro.gov.br/inmetro/beacon/beacon-engine:1
          imagePullPolicy: Always # mudar em producao
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
          volumeMounts:
            - mountPath: beacon/config
              name: app-vol
      volumes:
        - name: app-vol
          configMap:
            name: beacon-engine-config
      imagePullSecrets:
        - name: inmetro-registry
      nodeSelector:
        applicationType: oltp
---
apiVersion: v1
kind: Service
metadata:
  name: beacon-engine-service
  namespace: beacon
spec:
  selector:
    app: beacon-engine-service
  type: NodePort
  ports:
    - protocol: TCP
      # service port
      port: 8080
      # POD port
      targetPort: 8080